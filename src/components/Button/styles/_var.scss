@use 'sass:math';
@use 'sass:map';

@use '../../../styles/variables' as *;
@use '../../../styles/mixins/function' as *;

$button: () !default;
$button: map.merge(
                (
                        'font-weight': getCssVar('font-weight-semi'),
                        'border-color': getCssVar('border-default'),
                        'bg-color': getCssVar('fill-color', 'blank'),
                        'text-color': getCssVar('text-color', 'regular'),
                        'disabled-text-color': getCssVar('disabled-text-color'),
                        'disabled-bg-color': getCssVar('fill-color', 'blank'),
                        'disabled-border-color': getCssVar('border-color-light'),

                        'divide-border-color': getCssVar('static-white'),

                        'hover-text-color': getCssVar('color-primary'),
                        'hover-bg-color': getCssVar('color-primary', 'light-9'),
                        'hover-border-color': getCssVar('color-primary-light-7'),
                        'active-text-color': getCssVar('button-hover-text-color'),
                        'active-border-color': getCssVar('color-primary'),
                        'active-bg-color': getCssVar('button', 'hover-bg-color'),
                        'outline-color': getCssVar('primary', '1'),
                        'hover-link-text-color': getCssVar('color-info'),
                        'active-color': getCssVar('text-color', 'primary'),
                ),
                $button
);

$button-border-width: $border-width !default;

// need mix, so do not use css var
$button-hover-tint-percent: 20%;
$button-active-shade-percent: 10%;

$button-border-color: () !default;
$button-bg-color: () !default;
$button-text-color: () !default;

@each $theme, $colors in $themes {
  .theme-#{$theme} {
    @each $type in $types {
      $button-border-color: map.merge(
                      (
                              $type: map.get($colors, $type, 'base'),
                      ),
                      $button-border-color
      ) !global;

      $button-bg-color: map.merge(
                      (
                              $type: map.get($colors, $type, 'base'),
                      ),
                      $button-bg-color
      ) !global;
    }
  }
}

$button-height: () !default;
$button-height: map.merge(
                (
                        'large': 40px,
                        'medium': 32px,
                        'small': 24px,
                ),
                $button-height
);

$button-font-size: () !default;
$button-font-size: map.merge(
                (
                        'large': getCssVar('font-size', 'medium'),
                        'medium': getCssVar('font-size', 'base'),
                        'small': 12px,
                ),
                $button-font-size
);

$button-border-radius: () !default;
$button-border-radius: map.merge(
                (
                        'large': getCssVar('border-radius', 'base'),
                        'medium': getCssVar('border-radius', 'base'),
                        'small': calc(#{getCssVar('border-radius', 'base')} - 1px),
                ),
                $button-border-radius
);

$button-padding-vertical: () !default;
$button-padding-vertical: map.merge(
                (
                        'large': 9px,
                        'medium': 6px,
                        'small': 4px,
                ),
                $button-padding-vertical
);

$button-padding-horizontal: () !default;
$button-padding-horizontal: map.merge(
                (
                        'large': 16px,
                        'medium': 16px,
                        'small': 12px,
                ),
                $button-padding-horizontal
);